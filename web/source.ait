hsl: "hsl(%s, %s%, %s%)" replace3 ;

teal: 60 85 180 hsl ;
black: 0 0 0 hsl ;
pink: "#d36fc8" ;
blue: "#2347e6" ;

Y: "y" get ;
X: "x" get ;
origo: { "x" 0 "y" 0 } ;
withKey: swap make with ;
withX: "x" withKey ;
withY: "y" withKey ;

toCarthX:
  dup Y [ X ] dip cos * ;

toCarthY:
  dup Y [ X ] dip sin * ;

toCarth: origo [ dup toCarthX ] dip swap withX [ toCarthY ] dip swap withY ;

toPolarR:
  dup X dup * [ Y dup * ] dip sqrt ;

toPolarPhi:
  dup Y [ X ] dip atan2 ;

toPolar: origo [ dup toPolarR ] dip swap withX [ toPolarPhi ] dip swap withY ;

toRad: 180 / PI * ;

2deg: PI / 180 * ;

add2Y: [ dup X ] dip + withX ;
add2X: [ dup Y ] dip + withY ;

topLeftCorner: canvasWidth -1 * 2 / canvasHeight -1 * 2 / ;

fillBackground: topLeftCorner canvasWidth canvasHeight fillRect ;

random2: dup [ - random * ] dip + ;
random25: -25 25 random2 ;

calcNextControlPoint:
  random25 add2Y
  3 toRad add2X ;

calcNextAlongCircle:
  6 toRad add2X ;

circle:
  beginPath
  dup [ toCarth moveTo ] dip
  [ dup Y 2 PI * 6 toRad - <= ]
  [ dup [ calcNextControlPoint ] dip calcNextAlongCircle dup [ toCarth [ toCarth ] dip quadraticCurveTo ] dip ]
  while
  pop
  closePath ;

tealStroke: teal strokeStyle ;
pinkStroke: pink strokeStyle ;
blueStroke: blue strokeStyle ;

config:
  canvasWidth 2 / canvasHeight 2 / translate
  2.5 lineWidth
  0.5 globalAlpha
  black fillStyle ;

config
[ fillBackground
  { "x" 175 "y" 0 } circle tealStroke stroke unstack
  { "x" 125 "y" 0 } circle pinkStroke stroke unstack
  { "x" 150 "y" 0 } circle blueStroke stroke unstack ]
raf
