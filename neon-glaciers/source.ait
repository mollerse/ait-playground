@load ait-canvas ;
@load ait-canvas/node ;
@load ./point ;

nodeCanvas canvasContext
1680 1050 canvasDimensions

H: canvasHeight ;
W: canvasWidth ;
WMax: W 2 / ;
WMin: WMax neg ;
HMax: H 2 / ;
HMin: HMax neg ;
WindowMin: WMin HMin [] cons cons ;
WindowMax: WMax HMax [] cons cons ;

randomElement:
  -> aggr
  0 aggr size random2 floor
  aggr of ;

palette: [ "rgb(0,255,242)" "rgb(252,0,255)" "rgb(57,255,20)" ] ;
randomColor : palette randomElement ;
randomStroke: randomColor strokeStyle ;

noFill: "none" fillStyle ;
fillBackground:
  1 globalAlpha
  fillStyle
  WindowMin W H fillRect ;


randomPointWithVelocity:
  [0 0 0 0]
  WMin WMax random2 swap .X
  -5 5 random2 swap .Y
  -0.2 0.2 random2 swap .DY
  0 swap .SDY ;

points:
  []
  1000 [ randomPointWithVelocity swons ] times ;

sortedPoints: points 0 sortBy ;

drawPoints:
  -> points
  0.1 globalAlpha
  beginPath
  points first moveTo
  points [ lineTo ] step
  stroke ;

movePoint:
  -> I
  -> Ps
  -> P
  I 0 =
  [
    P Y P DY +
    P .Y pop
    P DY
    P .SDY pop
  ]
  [
    I pred Ps of -> Prev
    P Y Prev SDY +
    P .Y pop
    P DY Prev SDY +
    P .SDY pop

    P Y HMax 150 - > [ -0.2 0 random2 P .DY pop ] cond
    P Y HMin 150 + < [ 0 0.2 random2 P .DY pop ] cond
  ]
  branch ;

movePoints: [ _a _i movePoint ] step ;

config:
  canvasWidth 2 / canvasHeight 2 / translate
  noFill
  randomStroke
  0.1 lineWidth
  1 globalAlpha ;

config
fillBackground
sortedPoints -> Ps
200 [
  Ps drawPoints
  Ps movePoints
] times
"neon.png" writeImage
